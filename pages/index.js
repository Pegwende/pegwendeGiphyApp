/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import InfiniteScroll from "react-infinite-scroll-component"
import styles from '../styles/Home.module.css'

export default function Home() {

  // get the result from search box and stored it to gif
  const [gif, setGif] = useState('')

  // to check if there are more data for infinite scrolling
  const [hasMore, setHasMore] = useState(true)

  // store the the fetched data in results
  const [results, setResults] = useState([])

  //Update the fetch data when the form is submitted.
  const handleSubmit = async ( event) => {
    event.preventDefault()
    const res = await fetch(`./api/gif?q=${gif}`)
    const data = await res.json()
    setResults(data)
  }

  // Update the gif value when the customer typed in search box
  const handleChange = (event) => {
    setGif(event.target.value)
  }

  //To load more post for infinite scrolling
  const getMorePost = async () =>{
    // const res = await fetch(`./api/gif?q=${gif}`);

    // const newPosts = await res.json()
    // console.log(newPosts)
    // setResults((results) => [...results, ...newPosts])
  }



  return (
    <div className={styles.container}>

          <Head>
              <title>Create Next App</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
          </Head>


          <main className={styles.main}>
              <h1 className={styles.title}>
                Welcome to <a href="https://giphy.com/">Giphy App!</a>
              </h1>

              <div className={styles.inputForm}>
                <form onSubmit={handleSubmit} className='search'>
                  <input value={gif} onChange={handleChange} className={styles.box} placeholder='Search...' type="text"></input>
                  <button className={styles.box} onClick={handleSubmit} >Search</button>
                </form>
              </div>


              <InfiniteScroll
                dataLength={results.length}
                next={getMorePost}
                hasMore={hasMore}
                loader={<h2>Loading...</h2>}
                endMessage={<h2>Nothing more to show</h2>}
              >
                <ul className={styles.grid}>
                    {results.map((result) =>{
                      const { id, title, image } = result
                      
                      return (
                          <li key={id} className={styles.card}>
                            <div  className={styles.imgCont} >
                             <video className={styles.img} src={image} /> 
                            </div>
                               
                          </li>
                      )         
                      })}
                </ul>
              </InfiniteScroll>

                   
          </main>


    </div>
  )
}
